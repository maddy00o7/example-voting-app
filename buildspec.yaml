version: 0.2

env:
  variables:
    REGION: ap-south-1
    ECR_REPO: 654654589559.dkr.ecr.ap-south-1.amazonaws.com/pop/test
    GITHUB_REPO: maddy00o7/example-voting-app
    GITHUB_BRANCH: main
    GITHUB_TOKEN: $gittoken

phases:
  install:
    commands:
      - echo Installing essentials...
      - apt-get update -y
      - apt-get install -y git
      - echo Logging in to ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ECR_REPO

  build:
    commands:
      - echo Building Docker image from vote/ directory...
      - cd vote
      - if [ ! -f Dockerfile ]; then echo "Dockerfile missing!"; exit 1; fi
      - docker build -t vote-app:latest .
      - docker tag vote-app:latest $ECR_REPO:latest
      - echo Determining next version tag...
      - |
        EXISTING=$(aws ecr describe-images \
          --repository-name pop/test \
          --region $REGION \
          --query 'imageDetails[].imageTags' \
          --output text | tr '\t' '\n' | grep -E '^latest-v[0-9]+$' | sort -V | tail -n1)
        if [ -z "$EXISTING" ]; then
          IMAGE_TAG="latest-v1"
        else
          N=$(echo $EXISTING | grep -o '[0-9]\+$')
          IMAGE_TAG="latest-v$((N+1))"
        fi
      - echo New image tag: $IMAGE_TAG
      - docker tag vote-app:latest $ECR_REPO:$IMAGE_TAG
      - echo Pushing images...
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:$IMAGE_TAG

  post_build:
    commands:
      - echo Adding comment to vote-deployment.yaml...
      - COMMENT="# Image pushed: $ECR_REPO:$IMAGE_TAG at $(date -u +"%Y-%m-%dT%H:%M:%SZ")"
      - echo $COMMENT >> k8s-specifications/vote-deployment.yaml
      - echo Configuring git...
      - git config --global user.email "lagalimaddy007@gmail.com"
      - git config --global user.name "maddy00o7"
      - git remote set-url origin https://$GITHUB_TOKEN@github.com/$GITHUB_REPO.git
      - git add k8s-specifications/vote-deployment.yaml
      - git commit -m "ci: annotate vote-deployment.yaml with image tag $IMAGE_TAG"
      - git push origin $GITHUB_BRANCH

artifacts:
  files:
    - '**/*'
